recordOffset pmBounds:R @ 6

on tearPalette mnuName,pos
  if mnuName = "?" then
    return "tearPalette <mnuName>[,<loc>]"
  else if mnuName = "!" then
    return "tearPalette © 1996-99 by M. Uli Kusterer, all rights reserved."
  end if
  put getMenuID(mnuName)+0 into mnuID
  if mnuID = NIL then return "Error: Menu doesn't exist."
  put GetMHandle(mnuID) into myMenu
  if myMenu = NIL then return "Error: You have to load the menu first."
  put newPtr(8) into box
  put (item 1 of pos)+0 into box@.left
  put (item 2 of pos)+0 into box@.top
  localToGlobal box@.longIntType[1]
  put box@.left + myMenu@@.menuWidth into box@.right
  put box@.top + myMenu@@.menuHeight into box@.bottom
  put newXWindow(box@,myMenu@@.menuData,FALSE,2052,FALSE,TRUE) into¬
  winPtr
  disposPtr box
  if winPtr = NIL then
    return "Error: Couldn't create window."
  end if
  put mnuID into winPtr@.refCon.integerType[1]
  showWindow winPtr
end tearPalette

on openEvent eventInfoPtr
  put eventInfoPtr@.eventWindow into winPtr
  XWAllowReEntrancy winPtr,TRUE,TRUE
end openEvent

function closeEvent eventInfoPtr
  put eventInfoPtr@.eventWindow into winPtr
  return TRUE
end closeEvent

on updateEvent eventInfoPtr
  put eventInfoPtr@.eventWindow into winPtr
  put getMHandle(winPtr@.refCon.integerType[1]) into myMenu
  if myMenu = NIL then
    closeXWindow winPtr
  else
    setPort winPtr
    beginUpdate winPtr
    put newPtr(8) into box
    put winPtr@.portRect.longIntType[1] into box@.longIntType[1]
    put winPtr@.portRect.longIntType[2] into box@.longIntType[2]
    drawMenu myMenu,box
    disposPtr box
    endUpdate winPtr
  end if
end updateEvent

on mouseDownEvent eventInfoPtr
  put eventInfoPtr@.eventWindow into winPtr
  if frontDocWindow() ≠ winPtr then
    selectWindow winPtr
  end if
  put FindWindow(eventInfoPtr@.event.where,winPtr) into temp
  if temp is inContent then
    hitWindow winPtr,eventInfoPtr@.event.where
  else if temp is inDrag then
    put newPtr(8) into box
    setRect box@,-16000,-16000,16000,16000
    DragWindow winPtr,eventInfoPtr@.event.where,box@
    disposPtr box
  else if temp is inGoAway then
    if trackGoAway(winPtr,eventInfoPtr@.event.where)
    then CloseXWindow winPtr
  end if
end mouseDownEvent

on hidePalettesEvent eventInfoPtr
  put eventInfoPtr@.eventWindow into winPtr
  hideWindow winPtr
end hidePalettesEvent

on showPalettesEvent eventInfoPtr
  put eventInfoPtr@.eventWindow into winPtr
  showWindow winPtr
end showPalettesEvent

function SetPropEvent eventInfoPtr,propNamePtr,theValue
  put eventInfoPtr@.eventWindow into winPtr
  put propNamePtr@.str255type into theProp
  setPort winPtr
  if theProp = "update" then
    eraseRect winPtr@.portRect
    invalRect winPtr@.portRect
  else return TRUE
  return FALSE
end SetPropEvent

on app4Event eventInfoPtr
  put eventInfoPtr@.event.message into theMsg
  put eventInfoPtr@.eventWindow into winPtr
  if bitAnd(theMsg,1) ≠ 0 then
    showWindow winPtr
  else
    hideWindow winPtr
  end if
end app4Event

on drawMenu myMenu, mnuRect
  put newPtrClear(8) into box
  put newPtr(8) into temp
  put -1 into horzOffset
  put -1 into vertOffset
  add mnuRect@.left to horzOffset
  add mnuRect@.top to vertOffset
  put countMItems(myMenu) into itemCount
  repeat with x = 1 to itemCount
    GetItem myMenu, x, theStr
    if char 1 of theStr = "-" then
      penPat gray
      moveTo mnuRect@.left,vertOffset +2
      lineTo mnuRect@.right,vertOffset +2
      penPat black
      put mnuRect@.left -1 into horzOffset
      add 4 to vertOffset
    else
      StringToNum theStr,resID
      put GetCIcon(resID) into myColorIcon
      if myColorIcon ≠ NIL then
        put myColorIcon@@.iconPMap.pmBounds.longIntType[1] into box@.longIntType[1]
        put myColorIcon@@.iconPMap.pmBounds.longIntType[2] into box@.longIntType[2]
        offsetRect box@,-box@.left,-box@.top
        offsetRect box@,horzOffset,vertOffset
        put box@.longIntType[1] into temp@.longIntType[1]
        put box@.longIntType[2] into temp@.longIntType[2]
        plotCIcon box@,myColorIcon
        disposCIcon myColorIcon
        GetItemMark myMenu, x, theChar
        insetRect temp@,1,1
        if theChar = checkMark then
          penMode patXor
          paintRect temp@
          penMode patCopy
        end if
        if bitAnd(myMenu@@.enableFlags.longIntType,1) = 0 then
          penPat gray
          penMode notPatBic
          paintRect temp@
          penMode patCopy
          penPat black
        else if x < 32 then
          penPat gray
          penMode notPatBic
          if bitAnd(myMenu@@.enableFlags.longIntType,2^x) = 0 then
            paintRect temp@
          end if
          penMode patCopy
          penPat black
        end if
        debug checkpoint
        GetItemCmd myMenu,x,theChar
        if charToNum("•") = charToNum(theChar) then
          put mnuRect@.left -1 into horzOffset
          put box@.bottom -1 into vertOffset
        else
          put box@.right -1 into horzOffset
        end if
      end if
    end if
  end repeat
  disposPtr box
  disposPtr temp
end drawMenu

on hitWindow winPtr,hitPos
  globalToLocal hitPos
  put getMHandle(winPtr@.refCon.integerType[1]) into myMenu
  if myMenu = NIL then
    closeXWindow winPtr
    exit hitWindow
  end if
  if bitAnd(myMenu@@.enableFlags.longIntType,1) = 0 then exit hitWindow
  put newPtr(8) into box
  put -1 into horzOffset
  put -1 into vertOffset
  put countMItems(myMenu) into itemCount
  repeat with x = 1 to itemCount
    GetItem myMenu, x, theStr
    if char 1 of theStr = "-" then
      put -1 into horzOffset
      add 4 to vertOffset
    else
      StringToNum theStr,resID
      put GetCIcon(resID) into myColorIcon
      if myColorIcon ≠ NIL then
        put myColorIcon@@.iconPMap.pmBounds.longIntType[1] into ¬
        box@.longIntType[1]
        put myColorIcon@@.iconPMap.pmBounds.longIntType[2] into ¬
        box@.longIntType[2]
        offsetRect box@,-box@.left,-box@.top
        offsetRect box@,horzOffset,vertOffset
        disposCIcon myColorIcon
        if PtInRect(hitPos,box@) then
          if bitAnd(myMenu@@.enableFlags.longIntType,2^x) ≠ 0 then
            runHandler ("hitPaletteButton" && quote & theStr & quote &¬
            "," & quote & myMenu@@.menuData & quote)
          end if
          exit repeat
        end if
        GetItemCmd myMenu,x,theChar
        if charToNum("•") = charToNum(theChar) then
          put mnuRect@.left -1 into horzOffset
          put box@.bottom -1 into vertOffset
        else
          put box@.right -1 into horzOffset
        end if
      end if
    end if
  end repeat
  disposPtr box
end hitWindow

function getMenuID mNam
  put getMenuBar() into currMenus
  HLock currMenus
  put currMenus@ into mPtr
  put currMenus@@.integerType[1] + mPtr into theLastMenu
  add 6 to mPtr
  put NIL into retVal
  repeat until mPtr > theLastMenu
    add 1 to menuCount
    put mPtr@.handleType[1] into myMenu
    if myMenu@@.menuData = mNam then
      put myMenu@@.menuID into retVal
      exit repeat
    end if
    add 6 to mPtr
  end repeat
  HUnlock currMenus
  disposHandle currMenus
  if retVal = NIL then
    put getHierMenuID(mNam) into retVal
  end if
  return retVal
end getMenuID

function getHierMenuID mNam
  put getMenuBar() into currMenus
  HLock currMenus
  put currMenus@ into mPtr
  add currMenus@@.integerType[1] to mPtr
  add 6 to mPtr -- get over last menu
  put mPtr@.integerType[1] into lastOffs
  put mPtr +lastOffs into theLastMenu
  add 6 to mPtr -- get over menuTitleSave & lastHMenu
  put NIL into retVal
  if mPtr > theLastMenu then sysbeep 30
  repeat until mPtr > theLastMenu
    add 1 to menuCount
    put mPtr@.handleType[1] into myMenu
    if myMenu@@.menuData = mNam then
      put myMenu@@.menuID into retVal
      exit repeat
    end if
    add 6 to mPtr
  end repeat
  HUnlock currMenus
  disposHandle currMenus
  return retVal
end getHierMenuID